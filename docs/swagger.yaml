basePath: /api
definitions:
  controllers.ChangePasswordRequest:
    properties:
      new_password:
        maxLength: 32
        minLength: 8
        type: string
      old_password:
        maxLength: 32
        minLength: 8
        type: string
    required:
    - new_password
    - old_password
    type: object
  controllers.LoginRequest:
    properties:
      email:
        type: string
      password:
        maxLength: 32
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  controllers.RegisterRequest:
    properties:
      email:
        type: string
      password:
        maxLength: 32
        minLength: 8
        type: string
      username:
        maxLength: 32
        minLength: 3
        type: string
    required:
    - email
    - password
    - username
    type: object
  controllers.ResetPasswordRequest:
    properties:
      password:
        maxLength: 32
        minLength: 8
        type: string
      token:
        type: string
      user_id:
        type: string
    required:
    - password
    - token
    - user_id
    type: object
  controllers.UserUpdateRequest:
    properties:
      email:
        type: string
      username:
        maxLength: 32
        minLength: 3
        type: string
    required:
    - email
    - username
    type: object
  models.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      is_admin:
        type: boolean
      is_verified:
        type: boolean
      updated_at:
        type: string
      username:
        type: string
    type: object
  utils.APIError:
    properties:
      error:
        type: boolean
      message:
        type: string
    type: object
info:
  contact:
    email: gatanasovgeorgiev@gmail.com
    name: Georgi Georgiev
  description: This is the API for Watermelon
  title: Watermelon API
  version: "1.0"
paths:
  /forgotten-password:
    post:
      consumes:
      - application/json
      description: Create a forgotten password token for a user
      parameters:
      - description: User's email address
        in: query
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/utils.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.APIError'
      tags:
      - Auth
  /login:
    post:
      consumes:
      - application/json
      description: Create a new session for the user
      parameters:
      - description: Login data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/utils.APIError'
        "401":
          description: Invalid credentials
          schema:
            $ref: '#/definitions/utils.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.APIError'
      tags:
      - Auth
  /logout:
    delete:
      consumes:
      - application/json
      description: Invalidate the user's session
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      security:
      - SessionID: []
      tags:
      - Auth
  /me:
    delete:
      consumes:
      - application/json
      description: Delete the authenticated user
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.APIError'
      security:
      - SessionID: []
      tags:
      - User
    get:
      consumes:
      - application/json
      description: Get the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.APIError'
      security:
      - SessionID: []
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Update the authenticated user
      parameters:
      - description: User data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.UserUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/utils.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.APIError'
      security:
      - SessionID: []
      tags:
      - User
  /me/password:
    put:
      consumes:
      - application/json
      description: Changes the authenticated user's password
      parameters:
      - description: Password change data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.ChangePasswordRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/utils.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.APIError'
      security:
      - SessionID: []
      tags:
      - User
  /register:
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: Registration data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/utils.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.APIError'
      tags:
      - Auth
  /reset-password:
    post:
      consumes:
      - application/json
      description: Create a forgotten password token for a user
      parameters:
      - description: Reset password data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.ResetPasswordRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/utils.APIError'
        "401":
          description: Invalid token
          schema:
            $ref: '#/definitions/utils.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.APIError'
      tags:
      - Auth
  /users:
    get:
      consumes:
      - application/json
      description: Get all existing users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.APIError'
      security:
      - SessionID: []
      tags:
      - User
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete user by given ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/utils.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.APIError'
      security:
      - SessionID: []
      tags:
      - User
    get:
      consumes:
      - application/json
      description: Get user by given ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/utils.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.APIError'
      security:
      - SessionID: []
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Update user by given ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.UserUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/utils.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.APIError'
      security:
      - SessionID: []
      tags:
      - User
  /users/{id}/verify:
    get:
      consumes:
      - application/json
      description: Verify a user's email given a token
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: Verification token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/utils.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.APIError'
      tags:
      - User
securityDefinitions:
  SessionID:
    description: This is the session ID
    in: cookie
    name: sessionID
    type: apiKey
swagger: "2.0"
