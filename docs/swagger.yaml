basePath: /api
definitions:
  auth.LoginRequest:
    properties:
      email:
        type: string
      password:
        maxLength: 32
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  auth.RegisterRequest:
    properties:
      email:
        type: string
      password:
        maxLength: 32
        minLength: 8
        type: string
      username:
        maxLength: 32
        minLength: 3
        type: string
    required:
    - email
    - password
    - username
    type: object
  auth.ResetPasswordRequest:
    properties:
      password:
        maxLength: 32
        minLength: 8
        type: string
      token:
        type: string
      user_id:
        type: string
    required:
    - password
    - token
    - user_id
    type: object
  errors.APIError:
    properties:
      error:
        type: string
    type: object
  users.ChangePasswordRequest:
    properties:
      new_password:
        maxLength: 32
        minLength: 8
        type: string
      old_password:
        maxLength: 32
        minLength: 8
        type: string
    required:
    - new_password
    - old_password
    type: object
  users.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      is_admin:
        type: boolean
      is_verified:
        type: boolean
      updated_at:
        type: string
      username:
        type: string
    type: object
  users.UserUpdateRequest:
    properties:
      email:
        type: string
      username:
        maxLength: 32
        minLength: 3
        type: string
    required:
    - email
    - username
    type: object
info:
  contact:
    email: gatanasovgeorgiev@gmail.com
    name: Georgi Georgiev
  description: This is the API for Watermelon
  title: Watermelon API
  version: "1.0"
paths:
  /forgotten-password:
    post:
      consumes:
      - application/json
      parameters:
      - description: User's email address
        in: query
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      summary: Create a forgotten password token for a user
      tags:
      - Auth
  /login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Login data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.LoginRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/errors.APIError'
        "401":
          description: Invalid credentials
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      summary: Create a new session for the user
      tags:
      - Auth
  /logout:
    delete:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      security:
      - SessionID: []
      summary: Invalidate the user's session
      tags:
      - Auth
  /me:
    delete:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - SessionID: []
      summary: Delete the authenticated user
      tags:
      - Me
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.User'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - SessionID: []
      summary: Get the authenticated user
      tags:
      - Me
    put:
      consumes:
      - application/json
      parameters:
      - description: User data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/users.UserUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.User'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/errors.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - SessionID: []
      summary: Update the authenticated user
      tags:
      - Me
  /me/password:
    put:
      consumes:
      - application/json
      parameters:
      - description: Password change data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/users.ChangePasswordRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/errors.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - SessionID: []
      summary: Changes the authenticated user's password
      tags:
      - Me
  /register:
    post:
      consumes:
      - application/json
      parameters:
      - description: Registration data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      summary: Create a new user
      tags:
      - Auth
  /reset-password:
    post:
      consumes:
      - application/json
      parameters:
      - description: Reset password data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.ResetPasswordRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/errors.APIError'
        "401":
          description: Invalid token
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      summary: Create a forgotten password token for a user
      tags:
      - Auth
  /users:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/users.User'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - SessionID: []
      summary: Get all existing users
      tags:
      - User
  /users/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/errors.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - SessionID: []
      summary: Delete user
      tags:
      - User
    get:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.User'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/errors.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.APIError'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - SessionID: []
      summary: Get user
      tags:
      - User
    put:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/users.UserUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.User'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/errors.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/errors.APIError'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      security:
      - SessionID: []
      summary: Update user
      tags:
      - User
  /users/{id}/verify:
    put:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: query
        name: id
        required: true
        type: string
      - description: Verification token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/errors.APIError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/errors.APIError'
      summary: Verify a user
      tags:
      - User
securityDefinitions:
  SessionID:
    description: This is the session ID
    in: cookie
    name: sessionID
    type: apiKey
swagger: "2.0"
